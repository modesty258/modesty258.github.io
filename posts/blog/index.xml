<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>🧱 建站 on Modest&#39;s Blog</title>
    <link>https://modesty258.github.io/posts/blog/</link>
    <description>Recent content in 🧱 建站 on Modest&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 25 Apr 2023 10:33:28 +0800</lastBuildDate><atom:link href="https://modesty258.github.io/posts/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用git更新hugo个人blog</title>
      <link>https://modesty258.github.io/posts/blog/%E4%BD%BF%E7%94%A8git%E6%9B%B4%E6%96%B0hugo%E4%B8%AA%E4%BA%BAblog/</link>
      <pubDate>Tue, 25 Apr 2023 10:33:28 +0800</pubDate>
      
      <guid>https://modesty258.github.io/posts/blog/%E4%BD%BF%E7%94%A8git%E6%9B%B4%E6%96%B0hugo%E4%B8%AA%E4%BA%BAblog/</guid>
      <description>使用Git更新Hugo 个人博客 该文章主要是讨论，如何在本地搭建好hugo静态网页后，上传git到自己的域名下。而且每天进行实时更新。 第一次git push hugo # 生成public cd public git init git remote add origin https://github.com/xxx/xxx.github.io #填写自己的域名 git add . git commit -m &amp;#34;hugo&amp;#34; git push -u origin master 这个基本都会了，不然网站也没法使用 第二次push 为什么要</description>
    </item>
    
    <item>
      <title>常见问题</title>
      <link>https://modesty258.github.io/posts/blog/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</link>
      <pubDate>Mon, 24 Apr 2023 17:42:19 +0800</pubDate>
      
      <guid>https://modesty258.github.io/posts/blog/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</guid>
      <description>我在部署中遇到的一些常见问题</description>
    </item>
    
    <item>
      <title>利用cmd生成文章</title>
      <link>https://modesty258.github.io/posts/blog/%E5%BF%AB%E6%8D%B7%E7%94%9F%E6%88%90%E6%96%87%E7%AB%A0/</link>
      <pubDate>Sun, 23 Apr 2023 22:18:23 +0800</pubDate>
      
      <guid>https://modesty258.github.io/posts/blog/%E5%BF%AB%E6%8D%B7%E7%94%9F%E6%88%90%E6%96%87%E7%AB%A0/</guid>
      <description>1.基本头部信息修改 定位到文件：archetypes/default.md，添加如下代码 --- title: &amp;#34;{{ replace .Name &amp;#34;-&amp;#34; &amp;#34; &amp;#34; | title }}&amp;#34; date: {{ .Date }} lastmod: {{ .Date }} author: [&amp;#34;Sulv&amp;#34;] keywords: - categories: # 没有分类界面可以不填写 - tags: # 标签 - description: &amp;#34;&amp;#34; weight: slug: &amp;#34;&amp;#34; draft: false # 是否为草稿 comments: true # 本页面是否显示评论 reward: true # 打赏 mermaid: true #是否开启mermaid showToc: true # 显示目录 TocOpen: true #</description>
    </item>
    
    <item>
      <title>Blog</title>
      <link>https://modesty258.github.io/posts/blog/blog/</link>
      <pubDate>Thu, 05 May 2022 00:18:23 +0800</pubDate>
      
      <guid>https://modesty258.github.io/posts/blog/blog/</guid>
      <description></description>
    </item>
    
    <item>
      <title>如何生成一篇文章</title>
      <link>https://modesty258.github.io/posts/blog/213123/</link>
      <pubDate>Thu, 05 May 2022 00:18:23 +0800</pubDate>
      
      <guid>https://modesty258.github.io/posts/blog/213123/</guid>
      <description>部署到github https://zz2summer.github.io/github-pages-hugo-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/ 我是小垃圾 问题 大体步骤已经很清晰了 将文件放在public中，具体代码实现 hugo 这一步很重要创建public cd public 网站会将初始文件放在这个目录下 git init 初始化 git remote add origin git@github.com:username/username.github.io.git#关联git仓</description>
    </item>
    
    <item>
      <title>如何生成一篇文章</title>
      <link>https://modesty258.github.io/posts/blog/%E5%A6%82%E4%BD%95%E4%B8%8A%E4%BC%A0%E6%96%87%E7%AB%A0/</link>
      <pubDate>Thu, 05 May 2022 00:18:23 +0800</pubDate>
      
      <guid>https://modesty258.github.io/posts/blog/%E5%A6%82%E4%BD%95%E4%B8%8A%E4%BC%A0%E6%96%87%E7%AB%A0/</guid>
      <description>传文字 第一步 新建一个markdown文件在需要的分类下面，起好名字 然后命名好格式 利用源代码模式修改时间和标题等内容 --- title: &amp;#34;如何生成一篇文章&amp;#34; date: 2022-05-05T00:18:23+08:00 lastmod: 2022-05-05T00:18:23+08:00 author: [&amp;#34;Sulv&amp;#34;] keywords: - categories: - tags: - blog description: &amp;#34;&amp;#34; weight: slug: &amp;#34;&amp;#34; draft: false # 是否为草稿 comments: true reward: false # 打赏 mermaid: true #是否开启mermaid showToc: true # 显示目录 TocOpen: true # 自动展开目录</description>
    </item>
    
  </channel>
</rss>
